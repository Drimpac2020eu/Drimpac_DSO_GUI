"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Promise = require("bluebird");
const ResultSet_1 = require("./ResultSet");
const Java_1 = require("./Java");
class PreparedStatement {
    constructor(statement) {
        this.preparedStatement = Promise.promisifyAll(statement);
    }
    setString(index, value) {
        return this.preparedStatement.setStringSync(index, value);
    }
    setInt(index, value) {
        return this.preparedStatement.setIntSync(index, value);
    }
    setLong(index, value) {
        const longValue = value ? Java_1.Java.getInstance()
            .java.newInstanceSync('java.lang.Long', value) : 0;
        return this.preparedStatement.setLongSync(index, longValue);
    }
    setTimestamp(index, value) {
        const timestamp = value ? Java_1.Java.getInstance()
            .java.callStaticMethodSync('java.sql.Timestamp', 'valueOf', value) : null;
        return this.preparedStatement.setTimestampSync(index, timestamp);
    }
    setDate(index, value) {
        const date = value ? Java_1.Java.getInstance()
            .java.callStaticMethodSync('java.sql.Date', 'valueOf', value) : null;
        return this.preparedStatement.setDateSync(index, date);
    }
    executeUpdate() {
        return this.preparedStatement.executeUpdateAsync();
    }
    executeUpdateSync() {
        return this.preparedStatement.executeUpdateSync();
    }
    addBatch() {
        return this.preparedStatement.addBatchAsync();
    }
    addBatchSync() {
        return this.preparedStatement.addBatchSync();
    }
    executeBatch() {
        return this.preparedStatement.executeBatchAsync();
    }
    executeBatchSync() {
        return this.preparedStatement.executeBatchSync();
    }
    executeQuery() {
        return this.preparedStatement.executeQueryAsync()
            .then((resultSet) => new ResultSet_1.ResultSet(resultSet));
    }
    close() {
        return this.preparedStatement.closeAsync();
    }
}
exports.PreparedStatement = PreparedStatement;
//# sourceMappingURL=PreparedStatement.js.map