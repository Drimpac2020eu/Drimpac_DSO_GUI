"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Holdabilities_1 = require("./Holdabilities");
const Types_1 = require("./Types");
class ResultSetMetaData {
    constructor(resultSetMetaData) {
        this.resultSetMetaData = resultSetMetaData;
        this.types = Types_1.Types();
        this.holdabilities = Holdabilities_1.Holdabilities();
    }
    getColumnCount() {
        return this.resultSetMetaData.getColumnCountSync();
    }
    getColumnName(columnIndex) {
        return this.resultSetMetaData.getColumnNameSync(columnIndex);
    }
    getColumnLabel(columnIndex) {
        return this.resultSetMetaData.getColumnLabelSync(columnIndex);
    }
    getColumnType(columnIndex) {
        const typeIndex = this.resultSetMetaData.getColumnTypeSync(columnIndex);
        return {
            index: typeIndex,
            name: this.getTypeName(typeIndex)
        };
    }
    getTypeName(typeIndex) {
        return this.types[typeIndex] || 'String';
    }
    getAllColumnMeta() {
        const columns = [];
        const columnCount = this.getColumnCount();
        for (let i = 1; i <= columnCount; i++) {
            columns.push({
                columnIndex: i,
                name: this.getColumnName(i),
                label: this.getColumnLabel(i),
                type: this.getColumnType(i)
            });
        }
        return columns;
    }
}
exports.ResultSetMetaData = ResultSetMetaData;
//# sourceMappingURL=ResultSetMetaData.js.map